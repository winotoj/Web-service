package todowebservicejavaclient;

import java.awt.Color;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import todoWsJavaClient.ArrayOfTodo;
import todoWsJavaClient.ITodoService;
import todoWsJavaClient.ObjectFactory;
import todoWsJavaClient.Todo;
import todoWsJavaClient.TodoService;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
class TodoRenderer extends JLabel implements ListCellRenderer<Todo> {
 
   

    @Override
    public Component getListCellRendererComponent(JList<? extends Todo> list, Todo todo, int index, boolean isSelected, boolean cellHasFocus) {
        setText(String.format(" %s on %s (%s)", todo.getTask().getValue(), todo.getDueDate(), todo.isIsDone() ? "true" : "false"));
        Color foreground;
         // check if this cell is selected
          if (isSelected) {            
             foreground = Color.RED;
         // unselected, and not the DnD drop location
         } else {           
             foreground = Color.BLACK;
         };        
         setForeground(foreground);
        return this;
    }
     
}
public class TodoJFrame extends javax.swing.JFrame {
    DefaultListModel<Todo> modelTodoList = new DefaultListModel<>();
    ITodoService client; 
    ObjectFactory factory; 
    public TodoJFrame() {
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        client = new TodoService().getBasicHttpBindingITodoService();
        factory = new ObjectFactory();
        initComponents();
        lstTodos.setCellRenderer(new TodoRenderer());
        displayList();
    }
    private void displayList(){
        TodoRenderer render = new TodoRenderer();
       // Todo todo = new Todo();
        ArrayOfTodo arrayofTodo = new ArrayOfTodo();
        arrayofTodo= client.getAllTodos();
        List<Todo> todoList = arrayofTodo.getTodo();
        modelTodoList.clear();
        for(Todo t : todoList){
            modelTodoList.addElement(t);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfAdd = new javax.swing.JFrame();
        btSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfTask = new javax.swing.JTextField();
        tfDueDate = new javax.swing.JTextField();
        cbIsDone = new javax.swing.JCheckBox();
        jfEdit = new javax.swing.JFrame();
        tfTaskEdit = new javax.swing.JTextField();
        tfDueDateEdit = new javax.swing.JTextField();
        cbIsDoneEdit = new javax.swing.JCheckBox();
        btSaveEdit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstTodos = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();

        jfAdd.setMinimumSize(new java.awt.Dimension(350, 350));

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        jLabel2.setText("Task");

        jLabel3.setText("Due Date");

        cbIsDone.setText("Is Done");

        javax.swing.GroupLayout jfAddLayout = new javax.swing.GroupLayout(jfAdd.getContentPane());
        jfAdd.getContentPane().setLayout(jfAddLayout);
        jfAddLayout.setHorizontalGroup(
            jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfAddLayout.createSequentialGroup()
                .addGroup(jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfAddLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btSave))
                    .addGroup(jfAddLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfAddLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jfAddLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbIsDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jfAddLayout.setVerticalGroup(
            jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfAddLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jfAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cbIsDone)
                .addGap(64, 64, 64)
                .addComponent(btSave)
                .addGap(82, 82, 82))
        );

        jfEdit.setMinimumSize(new java.awt.Dimension(300, 300));

        cbIsDoneEdit.setText("Is Done");

        btSaveEdit.setText("Save");
        btSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveEditActionPerformed(evt);
            }
        });

        jLabel4.setText("Task");

        jLabel5.setText("Due Date");

        javax.swing.GroupLayout jfEditLayout = new javax.swing.GroupLayout(jfEdit.getContentPane());
        jfEdit.getContentPane().setLayout(jfEditLayout);
        jfEditLayout.setHorizontalGroup(
            jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfEditLayout.createSequentialGroup()
                .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfEditLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btSaveEdit))
                    .addGroup(jfEditLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jfEditLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTaskEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jfEditLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jfEditLayout.createSequentialGroup()
                                        .addComponent(cbIsDoneEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbId))
                                    .addComponent(tfDueDateEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jfEditLayout.setVerticalGroup(
            jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfEditLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTaskEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDueDateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jfEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIsDoneEdit)
                    .addComponent(lbId))
                .addGap(64, 64, 64)
                .addComponent(btSaveEdit)
                .addGap(82, 82, 82))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstTodos.setModel(modelTodoList);
        jScrollPane1.setViewportView(lstTodos);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(20, 20, 20)
                        .addComponent(btEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btDelete)))
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jfAdd.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
       Todo todo = new Todo();
       //String task = tfTask.getText();
       String due = tfDueDate.getText();
       boolean isDone = cbIsDone.isSelected()?true:false;
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       Date dueDate = null;
        try {
            dueDate = sdf.parse(due);
        } catch (ParseException ex) {
            Logger.getLogger(TodoJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       GregorianCalendar c = new GregorianCalendar();
        c.setTime(dueDate);
        XMLGregorianCalendar date2 = null;
        try {
            date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);
        } catch (DatatypeConfigurationException ex) {
            Logger.getLogger(TodoJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        todo.setTask(factory.createTodoTask(tfTask.getText()));
        todo.setDueDate(date2);
        todo.setIsDone(isDone);
        client.addTodo(todo);
        jfAdd.dispose();
        displayList();
    }//GEN-LAST:event_btSaveActionPerformed

    private void btSaveEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveEditActionPerformed
        Todo todo = new Todo();
       //String task = tfTask.getText();
       String due = tfDueDateEdit.getText();
       boolean isDone = cbIsDoneEdit.isSelected()?true:false;
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
       Date dueDate = null;
        try {
            dueDate = sdf.parse(due);
        } catch (ParseException ex) {
            Logger.getLogger(TodoJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       GregorianCalendar c = new GregorianCalendar();
        c.setTime(dueDate);
        XMLGregorianCalendar date2 = null;
        try {
            date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);
        } catch (DatatypeConfigurationException ex) {
            Logger.getLogger(TodoJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        todo.setId(Long.parseLong(lbId.getText()));
        todo.setTask(factory.createTodoTask(tfTaskEdit.getText()));
        todo.setDueDate(date2);
        todo.setIsDone(isDone);
        client.updateTodo(todo);
        jfEdit.dispose();
        displayList();
    }//GEN-LAST:event_btSaveEditActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        jfEdit.setVisible(true);
        lbId.setVisible(false);
        Todo td = lstTodos.getSelectedValue();
        if(td == null){
            return;
        }
        tfTaskEdit.setText(td.getTask().getValue());
        tfDueDateEdit.setText(td.getDueDate().toString());
        cbIsDoneEdit.setSelected(td.isIsDone().booleanValue());
        lbId.setText(td.getId().toString());
    }//GEN-LAST:event_btEditActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        Todo td = lstTodos.getSelectedValue();
        if (td == null){
            return;
        }
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure want to delete?","Warning",dialogButton);
    if(dialogResult == JOptionPane.YES_OPTION){
  // Saving code here
        client.deleteTodo(td.getId());
        displayList();
    }
    else
        return;
    }//GEN-LAST:event_btDeleteActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSaveEdit;
    private javax.swing.JCheckBox cbIsDone;
    private javax.swing.JCheckBox cbIsDoneEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFrame jfAdd;
    private javax.swing.JFrame jfEdit;
    private javax.swing.JLabel lbId;
    private javax.swing.JList<Todo> lstTodos;
    private javax.swing.JTextField tfDueDate;
    private javax.swing.JTextField tfDueDateEdit;
    private javax.swing.JTextField tfTask;
    private javax.swing.JTextField tfTaskEdit;
    // End of variables declaration//GEN-END:variables
}
